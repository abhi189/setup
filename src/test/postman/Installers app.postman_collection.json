{
	"info": {
		"_postman_id": "ef2e08e5-5c68-4b21-bda0-f43a7a93fb3f",
		"name": "Installers app",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Sites screen",
			"item": [
				{
					"name": "Get Account Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5924a074-4509-439a-b366-7ce7e54fdd5a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"var schema = {",
									"    type: \"object\",",
									"    properties:{",
									"     \"id\": { \"type\":\"integer\" },",
									"     \"login\": { \"type\":\"string\" },",
									"     \"authorities\": { \"type\":\"array\" }",
									"    }",
									"};",
									"",
									"",
									"pm.test('Response schema type nodes verification', function() {",
									"  pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER_URL}}/authenticate/api/account",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"authenticate",
								"api",
								"account"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Sites and Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08ce624f-f15a-4978-8ee8-5f87f24073e1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"pm.test('Response not empty', function() {",
									"  var jsonData = pm.response.json();",
									"  pm.expect(jsonData.length).to.be.above(0);",
									"  var budderflyId = jsonData[0].budderflyId;",
									"  pm.expect(budderflyId).to.not.eql(null);",
									"  pm.environment.set(\"BUDDERFLY_ID\", budderflyId);",
									"});",
									"",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": [{",
									"        type: \"object\",",
									"        properties:{",
									"         \"budderflyId\": { \"type\":\"string\" },",
									"         \"customerName\": { \"type\": [\"string\", \"null\"] },",
									"         \"storeNumber\": { \"type\": [\"string\", \"null\"] },",
									"         \"address\": { \"type\": [\"string\", \"null\"] },",
									"         \"city\": { \"type\": [\"string\", \"null\"] },",
									"         \"state\": { \"type\": [\"string\", \"null\"] },",
									"         \"zip\": { \"type\": [\"string\", \"null\"] },",
									"         \"online\": { \"type\":\"boolean\" },",
									"         \"serviceType\": { \"type\": [\"string\", \"null\"] },",
									"         \"connectionType\": { \"type\": [\"string\", \"null\"] }",
									"        }",
									"    }]",
									"};",
									"",
									"pm.test('Response schema verification', function() {",
									"  var valid = tv4.validate(pm.response.json(), schema);",
									"  pm.expect(valid).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER_URL}}/inventory/api/inventory-items/installer/sites/{{USER_LOGIN}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"inventory",
								"api",
								"inventory-items",
								"installer",
								"sites",
								"{{USER_LOGIN}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Installed Equipments",
			"item": [
				{
					"name": "Get Installed Eqipement Item for Site",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6a602289-c092-4ac5-a926-5fcc26394f03",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response not empty', function() {",
									"  pm.expect(pm.response.json().length).to.be.above(2);",
									"});",
									"",
									"",
									"var schema = {",
									"    \"type\": \"array\",",
									"    \"items\": [{",
									"        type: \"object\",",
									"        properties:{",
									"         \"id\": { \"type\":\"number\" },",
									"         \"name\": { \"type\":\"string\" },",
									"         \"budderflyId\": { \"type\":\"string\" },",
									"         \"externalId\": { \"type\":\"string\" },",
									"         \"inventoryItemTypeId\": { \"type\":\"number\" },",
									"         \"inventoryItemTypeCode\": { \"type\":\"string\" }",
									"        }",
									"    }]",
									"};",
									"",
									"pm.test('Response schema verification', function() {",
									"  pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;",
									"});",
									"",
									"pm.test('It has a Facility Controller', function() {",
									"  var jsonData = pm.response.json();",
									"  var flag = false;",
									"  for(var i = 0; i < jsonData.length; i++) {",
									"      if (jsonData[i].inventoryItemTypeCode == \"FACILITY_CONTROLLER_MHA\") {",
									"        flag = true;",
									"      }",
									"  }",
									"  pm.expect(flag).to.eql(true);",
									"});",
									"",
									"pm.test('It has a Network Router', function() {",
									"  var jsonData = pm.response.json();",
									"  var flag = false;",
									"  for(var i = 0; i < jsonData.length; i++) {",
									"      if (jsonData[i].inventoryItemTypeCode == \"NETWORK_ROUTER\") {",
									"        flag = true;",
									"      }",
									"  }",
									"  pm.expect(flag).to.eql(true);",
									"});",
									"",
									"pm.test('It has a Smappee', function() {",
									"  var jsonData = pm.response.json();",
									"  var flag = false;",
									"  for(var i = 0; i < jsonData.length; i++) {",
									"      if (jsonData[i].inventoryItemTypeCode == \"SMAPPEE\") {",
									"        flag = true;",
									"      }",
									"  }",
									"  pm.expect(flag).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{SERVER_URL}}/inventory/api/inventory-items?budderflyId.equals={{BUDDERFLY_ID}}",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"inventory",
								"api",
								"inventory-items"
							],
							"query": [
								{
									"key": "budderflyId.equals",
									"value": "{{BUDDERFLY_ID}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GET Inventory Item Types",
			"item": [
				{
					"name": "Get inventory types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9b2056d8-7f4a-4158-966e-abfe50614867",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "75e7ee5e-bf99-4000-b813-55419f83acda",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "POST (Create) Inventory Items",
			"item": [
				{
					"name": "[Save a Inventory Item] Create Inventory Item FC",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1b6fad0-bf6e-43bb-a3bc-d8d0623a951a",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Inventory Item was created\", function () {",
									"    var jsonData = pm.response.json();",
									"    var id = jsonData.id;",
									"    pm.expect(id).not.eql(null);",
									"    pm.environment.set(\"fc_inventory_item_id\", id);",
									"    console.log(\"Inventory Item Created: \", JSON.stringify(jsonData));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d225e841-e762-420d-9f9b-32d08ae3d7ad",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"POSTMAN FC INVENTORY ITEM\",\n    \"externalId\": \"11-22-33-44-55-66\",\n    \"budderflyId\": \"{{BUDDERFLY_ID}}\",\n    \"inventoryItemTypeId\": {{fc_inventory_item_type_id}}\n}"
						},
						"url": {
							"raw": "{{SERVER_URL}}/inventory/api/inventory-items",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"inventory",
								"api",
								"inventory-items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Inventory Item Smappee",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1b6fad0-bf6e-43bb-a3bc-d8d0623a951a",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Inventory Item was created\", function () {",
									"    var jsonData = pm.response.json();",
									"    var id = jsonData.id;",
									"    pm.expect(id).not.eql(null);",
									"    pm.environment.set(\"smappee_inventory_item_id\", id);",
									"    console.log(\"Inventory Item Created: \", JSON.stringify(jsonData));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d225e841-e762-420d-9f9b-32d08ae3d7ad",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"POSTMAN SMAPPEE INVENTORY ITEM\",\n    \"externalId\": \"1234\",\n    \"budderflyId\": \"{{BUDDERFLY_ID}}\",\n    \"inventoryItemTypeId\": {{smappee_inventory_item_type_id}}\n}"
						},
						"url": {
							"raw": "{{SERVER_URL}}/inventory/api/inventory-items",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"inventory",
								"api",
								"inventory-items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Inventory Item Network Router",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1b6fad0-bf6e-43bb-a3bc-d8d0623a951a",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Inventory Item was created\", function () {",
									"    var jsonData = pm.response.json();",
									"    var id = jsonData.id;",
									"    pm.expect(id).not.eql(null);",
									"    pm.environment.set(\"nr_inventory_item_id\", id);",
									"    console.log(\"Inventory Item Created: \", JSON.stringify(jsonData));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d225e841-e762-420d-9f9b-32d08ae3d7ad",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"POSTMAN NETWORK ROUTER INVENTORY ITEM\",\n    \"externalId\": \"11:22:33:AA:BB:CC\",\n    \"budderflyId\": \"{{BUDDERFLY_ID}}\",\n    \"inventoryItemTypeId\": {{nr_inventory_item_type_id}}\n}"
						},
						"url": {
							"raw": "{{SERVER_URL}}/inventory/api/inventory-items",
							"host": [
								"{{SERVER_URL}}"
							],
							"path": [
								"inventory",
								"api",
								"inventory-items"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9b2056d8-7f4a-4158-966e-abfe50614867",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "75e7ee5e-bf99-4000-b813-55419f83acda",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}